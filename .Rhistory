#bell predicts
bell_fit3_rate_all = bell_fit3$summary.fitted.values$mode*
100000/micro_f$populacao
bell_rate_test = bell_fit3_rate_all[(20545 - 3852: 20544)]
#poisson
poisson_fit3 = inla(
formula = formula3, family = 'poisson', data = micro_f,
working.directory = 'D:/INLA/',
control.predictor = list(compute = T, link = 1),
control.compute = list(dic = T, waic = T, cpo = T),
verbose = F
)
#poisson predicts
poisson_fit3_rate_all = poisson_fit3$summary.fitted.values$mode*
100000/micro_f$populacao
poi_rate_test = poisson_fit3_rate_all[(20545 - 3852: 20544)]
#nbinomial
nbinomial_fit4 = inla(
formula = formula4, family = 'nbinomial', data = micro_f,
working.directory = 'D:/INLA/',
control.predictor = list(compute = T, link = 1),
control.compute = list(dic = T, waic = T, cpo = T),
verbose = F
)
#nbinomial predicts
nbinomial_fit4_rate_all = nbinomial_fit4$summary.fitted.values$mode*
100000/micro_f$populacao
nbinomial_rate_test = nbinomial_fit4_rate_all[(20545 - 3852: 20544)]
#tables of errors----------------------------------------------------------
test_errors_falciparum = dplyr::tibble(
dist = c('bell', 'poisson', 'nbinomial'),
mbe = c(
mbe(real_rates_test, bell_rate_test),
mbe(real_rates_test, poi_rate_test),
mbe(real_rates_test, nbinomial_rate_test)
),
nrmse = c(
nrmse(real_rates_test, bell_rate_test),
nrmse(real_rates_test, poi_rate_test),
nrmse(real_rates_test, nbinomial_rate_test)
),
rae = c(
rae(real_rates_test, bell_rate_test),
rae(real_rates_test, poi_rate_test),
rae(real_rates_test, nbinomial_rate_test)
),
rmsle = c(
rmsle(real_rates_test, bell_rate_test),
rmsle(real_rates_test, poi_rate_test),
rmsle(real_rates_test, nbinomial_rate_test)
),
rse = c(
rse(real_rates_test, bell_rate_test),
rse(real_rates_test, poi_rate_test),
rse(real_rates_test, nbinomial_rate_test)
),
cor = c(
cor(real_rates_test, bell_rate_test),
cor(real_rates_test, poi_rate_test),
cor(real_rates_test, nbinomial_rate_test)
)
)
rmse = function(real, pred){
sqrt(mean((real - pred)^2))
}
mae = function(real, pred){
mean(abs(real - pred))
}
mbe = function(real, pred){
abs(mean(real - pred))
}
rae = function(real, pred){
sum(abs(real - pred))/sum(abs(real - mean(real)))
}
rse = function(real, pred){
sum((real - pred)^2)/sum((real - mean(real))^2)
}
nrmse = function(real, pred){
rmse(real, pred)/max(real)
}
rmsle = function(real, pred){
sqrt(mean((log(real + 1) - log(pred + 1))^2))
}
real_rates_all = micro_f$numCasos*100000/micro_f$populacao
real_rates_test = real_rates_all[(20545 - 3852: 20544)]
#tables of errors----------------------------------------------------------
test_errors_falciparum = dplyr::tibble(
dist = c('bell', 'poisson', 'nbinomial'),
mbe = c(
mbe(real_rates_test, bell_rate_test),
mbe(real_rates_test, poi_rate_test),
mbe(real_rates_test, nbinomial_rate_test)
),
nrmse = c(
nrmse(real_rates_test, bell_rate_test),
nrmse(real_rates_test, poi_rate_test),
nrmse(real_rates_test, nbinomial_rate_test)
),
rae = c(
rae(real_rates_test, bell_rate_test),
rae(real_rates_test, poi_rate_test),
rae(real_rates_test, nbinomial_rate_test)
),
rmsle = c(
rmsle(real_rates_test, bell_rate_test),
rmsle(real_rates_test, poi_rate_test),
rmsle(real_rates_test, nbinomial_rate_test)
),
rse = c(
rse(real_rates_test, bell_rate_test),
rse(real_rates_test, poi_rate_test),
rse(real_rates_test, nbinomial_rate_test)
),
cor = c(
cor(real_rates_test, bell_rate_test),
cor(real_rates_test, poi_rate_test),
cor(real_rates_test, nbinomial_rate_test)
)
)
#write results
test_errors_falciparum |> View()
test_errors_falciparum |>
write_csv('results/test_metrics_microrregion_falciparum.csv')
micro_f$preds = poisson_fit3_rate_all
micro_f$real = real_rates_all
micro_f |>
select(
codUF, siglaUF, codMicroRes, nomeMicroRes, ano, mes,
real, preds
) |> write_csv('results/preds_microrregion_falciparum_df.csv')
rmse = function(real, pred){
sqrt(mean((real - pred)^2))
}
mae = function(real, pred){
mean(abs(real - pred))
}
mbe = function(real, pred){
abs(mean(real - pred))
}
rae = function(real, pred){
sum(abs(real - pred))/sum(abs(real - mean(real)))
}
rse = function(real, pred){
sum((real - pred)^2)/sum((real - mean(real))^2)
}
nrmse = function(real, pred){
rmse(real, pred)/max(real)
}
rmsle = function(real, pred){
sqrt(mean((log(real + 1) - log(pred + 1))^2))
}
library(readr)
library(INLA)
library(dplyr)
#preparing data------------------------------------------------------------
#path
micro_path = 'outputs/micro_map.graph'
#read data
micro_v = read_csv('data/output_data/micro_reg_v_df.csv')
#spatial data
micro_spatial = read_csv('data/spatial_data/micro_map.csv')
#adjacency matrix
image(inla.graph2matrix(inla.read.graph(micro_path)), xlab = '', ylab = '')
#creating id area
micro_v$idArea = pmatch(
micro_v$codMicroRes,
micro_spatial$code_micro,
duplicates.ok = T
)
micro_v$idArea2 = micro_v$idArea
#creating id interaction (between area and time)
micro_v$idInteraction = as.numeric(interaction(micro_v$idArea,
micro_v$idMes))
real_rates_all = micro_v$numCasos*100000/micro_v$populacao
real_rates_test = real_rates_all[(20545 - 3852: 20544)]
#formulas---------------------------------------------------------------
formula2 = Y ~ f(mes, model = 'rw2', constr = T, cyclic = T) +
f(ano, model = 'rw1', constr = T) +
f(idArea, model = 'bym2', graph = micro_path) +
f(idMes, model = 'rw1') +
rhum + temp + offset(log(populacao))
formula3 = Y ~ f(mes, model = 'rw2', constr = T, cyclic = T) +
f(ano, model = 'rw1', constr = T) +
f(idArea, model = 'bym2', graph = micro_path) +
f(idMes, model = 'rw1') +
f(idInteraction, model = 'iid') + offset(log(populacao))
formula4 = Y ~ f(mes, model = 'rw2', constr = T, cyclic = T) +
f(ano, model = 'rw1', constr = T) +
f(idArea, model = 'bym2', graph = micro_path) +
f(idMes, model = 'rw1') +
f(idInteraction, model = 'iid') +
rhum + temp + offset(log(populacao))
#best vivax models-------------------------------------------------------
#bell
bell_fit3 = inla(
formula = formula3, family = 'bell', data = micro_v,
working.directory = 'D:/INLA/',
control.predictor = list(compute = T, link = 1),
control.compute = list(dic = T, waic = T, cpo = T),
verbose = F
)
#bell predicts
bell_fit3_rate_all = bell_fit3$summary.fitted.values$mode*
100000/micro_v$populacao
bell_rate_test = bell_fit3_rate_all[(20545 - 3852: 20544)]
#poisson
poisson_fit3 = inla(
formula = formula3, family = 'poisson', data = micro_v,
working.directory = 'D:/INLA/',
control.predictor = list(compute = T, link = 1),
control.compute = list(dic = T, waic = T, cpo = T),
verbose = F
)
#poisson predicts
poisson_fit3_rate_all = poisson_fit3$summary.fitted.values$mode*
100000/micro_v$populacao
poi_rate_test = poisson_fit3_rate_all[(20545 - 3852: 20544)]
#nbinomial
nbinomial_fit4 = inla(
formula = formula4, family = 'nbinomial', data = micro_v,
working.directory = 'D:/INLA/',
control.predictor = list(compute = T, link = 1),
control.compute = list(dic = T, waic = T, cpo = T),
verbose = F
)
#nbinomial predicts
nbinomial_fit4_rate_all = nbinomial_fit4$summary.fitted.values$mode*
100000/micro_v$populacao
nbinomial_rate_test = nbinomial_fit4_rate_all[(20545 - 3852: 20544)]
#tables of errors----------------------------------------------------------
test_errors_vivax = dplyr::tibble(
dist = c('bell', 'poisson', 'nbinomial'),
mbe = c(
mbe(real_rates_test, bell_rate_test),
mbe(real_rates_test, poi_rate_test),
mbe(real_rates_test, nbinomial_rate_test)
),
nrmse = c(
nrmse(real_rates_test, bell_rate_test),
nrmse(real_rates_test, poi_rate_test),
nrmse(real_rates_test, nbinomial_rate_test)
),
rae = c(
rae(real_rates_test, bell_rate_test),
rae(real_rates_test, poi_rate_test),
rae(real_rates_test, nbinomial_rate_test)
),
rmsle = c(
rmsle(real_rates_test, bell_rate_test),
rmsle(real_rates_test, poi_rate_test),
rmsle(real_rates_test, nbinomial_rate_test)
),
rse = c(
rse(real_rates_test, bell_rate_test),
rse(real_rates_test, poi_rate_test),
rse(real_rates_test, nbinomial_rate_test)
),
cor = c(
cor(real_rates_test, bell_rate_test),
cor(real_rates_test, poi_rate_test),
cor(real_rates_test, nbinomial_rate_test)
)
)
#write results
test_errors_vivax |> View()
test_errors_vivax |> write_csv('results/test_metrics_microrregion_vivax.csv')
micro_v$preds = bell_fit3_rate_all
micro_v$real = real_rates_all
micro_v |>
select(
codUF, siglaUF, codMicroRes, nomeMicroRes, ano, mes,
real, preds
) |> write_csv('results/preds_microrregion_vivax_df.csv')
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
#get data in wide format to make easier plots
df_vivax = read_csv('results/preds_microrregion_vivax_df.csv') |>
mutate(difs = real - preds) #|>
pivot_wider(names_from = c(ano, mes),
values_from = c(real, preds, difs))
df_falciparum = geobr::read_micro_region(year = 2017, simplified = F) |>
select('code_micro', 'name_micro') |>
inner_join(
df_falciparum,
by = c('code_micro' = 'codMicroRes')
)
#ploting map---------------------------------------------------------------
df_vivax |> filter(mes == 1) |>
ggplot() +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
scale_fill_gradientn(colours = c('#d7e1ee', '#991f17'),
name = 'Erro nominal') +
facet_wrap(~ano) +
theme_bw()
#spatial information for spatial plot
df_vivax = geobr::read_micro_region(year = 2017, simplified = F) |>
select('code_micro', 'name_micro') |>
inner_join(
df_vivax,
by = c('code_micro' = 'codMicroRes'),
multiple = 'all'
)
#ploting map---------------------------------------------------------------
df_vivax |> filter(mes == 1) |>
ggplot() +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
scale_fill_gradientn(colours = c('#d7e1ee', '#991f17'),
name = 'Erro nominal') +
facet_wrap(~ano) +
theme_bw()
#get data in wide format to make easier plots
df_vivax = read_csv('results/preds_microrregion_vivax_df.csv') |>
mutate(difs = real - preds) #|>
#spatial information for spatial plot
df_vivax = geobr::read_micro_region(year = 2017, simplified = F) |>
select('code_micro', 'name_micro') |>
inner_join(
df_vivax,
by = c('code_micro' = 'codMicroRes'),
multiple = 'all'
)
#ploting map---------------------------------------------------------------
df_vivax |> filter(mes == 1) |>
ggplot() +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
scale_fill_gradientn(colours = c('#d7e1ee', '#991f17'),
name = 'Erro nominal') +
facet_wrap(~ano) +
theme_bw()
#ploting map---------------------------------------------------------------
df_vivax |> filter(mes == 1 & (ano == 2016 | ano == 2017)) |>
ggplot() +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
scale_fill_gradientn(colours = c('#d7e1ee', '#991f17'),
name = 'Erro nominal') +
facet_wrap(~ano) +
theme_bw()
#ploting map---------------------------------------------------------------
df_vivax |> filter((mes == 2 | mes == 6 | mes == 11) &
(ano == 2016 | ano == 2017 | ano == 2018)) |>
ggplot() +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
scale_fill_gradientn(colours = c('#d7e1ee', '#991f17'),
name = 'Erro nominal') +
facet_wrap(~mes + ano) +
theme_bw()
#ploting map---------------------------------------------------------------
df_vivax |> filter((mes == 2 | mes == 6 | mes == 11) &
(ano == 2016 | ano == 2017 | ano == 2018)) |>
ggplot() +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
scale_fill_gradientn(colours = c('#d7e1ee', '#991f17'),
name = 'Erro nominal') +
facet_wrap(~mes + ano) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())
_vivax
#ploting map---------------------------------------------------------------
df_vivax |> filter((mes == 2 | mes == 6 | mes == 11) &
(ano == 2016 | ano == 2017 | ano == 2018)) |>
ggplot() +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
scale_fill_gradientn(colours = c('#d7e1ee', '#991f17'),
name = 'Erro nominal') +
facet_wrap(~ano + mes) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())
#get data in wide format to make easier plots
df_vivax = read_csv('results/preds_microrregion_vivax_df.csv') |>
mutate(difs = real - preds) |>
mutate(mes = sprintf('%02d', mes))
df_vivax
df_falciparum = read_csv('results/preds_microrregion_falciparum_df.csv') |>
mutate(difs = real - preds) |>
mutate(mes = sprintf('%02d', mes))
#spatial information for spatial plot
df_vivax = geobr::read_micro_region(year = 2017, simplified = F) |>
select('code_micro', 'name_micro') |>
inner_join(
df_vivax,
by = c('code_micro' = 'codMicroRes'),
multiple = 'all'
)
df_falciparum = geobr::read_micro_region(year = 2017, simplified = F) |>
select('code_micro', 'name_micro') |>
inner_join(
df_falciparum,
by = c('code_micro' = 'codMicroRes')
)
df_falciparum = geobr::read_micro_region(year = 2017, simplified = F) |>
select('code_micro', 'name_micro') |>
inner_join(
df_falciparum,
by = c('code_micro' = 'codMicroRes'),
multiple = 'all'
)
View(df_falciparum)
#ploting map---------------------------------------------------------------
#vivax_preds
df_vivax |> filter((mes == '02' | mes == '06' | mes == '11') &
(ano == 2016 | ano == 2017 | ano == 2018)) |>
ggplot() +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
scale_fill_gradientn(colours = c('#d7e1ee', '#991f17'),
name = 'Erro nominal') +
facet_wrap(~ano + mes) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank()) +
labs(subtitle = 'Erros nominais de predição por microrregião - Vivax')
#falciparum preds
df_falciparum |> filter((mes == '02' | mes == '06' | mes == '11') &
(ano == 2016 | ano == 2017 | ano == 2018)) |>
ggplot() +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
geom_sf(aes(fill = difs), color = 'black', size = .15) +
scale_fill_gradientn(colours = c('#d7e1ee', '#991f17'),
name = 'Erro nominal') +
facet_wrap(~ano + mes) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank()) +
labs(subtitle = 'Erros nominais de predição por microrregião - Falciparum')
#get data in wide format to make easier plots
df_vivax = read_csv('results/preds_microrregion_vivax_df.csv') |>
mutate(difs = real - preds) |>
mutate(mes = sprintf('%02d', mes)) |>
mutate(difs_rmsle = sqrt((log(real + 1) - log(preds + 1))^2))
df_falciparum = read_csv('results/preds_microrregion_falciparum_df.csv') |>
mutate(difs = real - preds) |>
mutate(mes = sprintf('%02d', mes)) |>
mutate(difs_rmsle = sqrt((log(real + 1) - log(preds + 1))^2))
#spatial information for spatial plot
df_vivax = geobr::read_micro_region(year = 2017, simplified = F) |>
select('code_micro', 'name_micro') |>
inner_join(
df_vivax,
by = c('code_micro' = 'codMicroRes'),
multiple = 'all'
)
df_falciparum = geobr::read_micro_region(year = 2017, simplified = F) |>
select('code_micro', 'name_micro') |>
inner_join(
df_falciparum,
by = c('code_micro' = 'codMicroRes'),
multiple = 'all'
)
#vivax_preds rmsle
df_vivax |> filter((mes == '02' | mes == '06' | mes == '11') &
(ano == 2016 | ano == 2017 | ano == 2018)) |>
ggplot() +
geom_sf(aes(fill = difs_rmsle), color = 'black', size = .15) +
geom_sf(aes(fill = difs_rmsle), color = 'black', size = .15) +
geom_sf(aes(fill = difs_rmsle), color = 'black', size = .15) +
scale_fill_gradientn(colours = c('#d7e1ee', '#991f17'),
name = 'RSLE') +
facet_wrap(~ano + mes) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank()) +
labs(subtitle = 'RSLE por microrregião - Vivax')
#falciparum preds rmsle
df_falciparum |> filter((mes == '02' | mes == '06' | mes == '11') &
(ano == 2016 | ano == 2017 | ano == 2018)) |>
ggplot() +
geom_sf(aes(fill = difs_rmsle), color = 'black', size = .15) +
geom_sf(aes(fill = difs_rmsle), color = 'black', size = .15) +
geom_sf(aes(fill = difs_rmsle), color = 'black', size = .15) +
scale_fill_gradientn(colours = c('#d7e1ee', '#991f17'),
name = 'RLSE') +
facet_wrap(~ano + mes) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank()) +
labs(subtitle = 'RSLE por microrregião - Falciparum')
#plot real values per year
df_vivax |> group_by(ano) |> summarise(real = sum(real)) |>
ggplot() +
geom_line(aes(x = ano, y = real)) +
theme_bw()
#plot real values per year
df_vivax |> group_by(ano) |> summarise(real = sum(real)) |>
ggplot() +
geom_line(aes(x = ano, y = real)) +
theme_bw()
gc()
#plot real values per year
df_vivax |> group_by(ano) |> summarise(real = sum(real)) |>
ggplot() +
geom_line(aes(x = ano, y = real)) +
theme_bw()
